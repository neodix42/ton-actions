name: U-22.04-arm64

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'TON branch name'
        required: true
        default: 'master'
  workflow_call:
    inputs:
      branch:
        description: 'TON branch name'
        required: true
        default: 'master'
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04-arm

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        path: ./${{ env.WORK_DIR }}

    - run: |
        sudo apt update
        sudo apt install -y apt-utils build-essential git cmake ninja-build zlib1g-dev libsecp256k1-dev libmicrohttpd-dev libsodium-dev liblz4-dev

    - name: Install Clang 16
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 16 all

    - name: Clone TON
      run: |
        git clone --recursive https://github.com/ton-blockchain/ton.git ton
        cd ton; git checkout ${{ inputs.branch }}; git submodule sync --recursive; git submodule update


    - name: Build TON
      run: |
        cd ton
        cp assembly/native/build-ubuntu-appimages.sh .
        chmod +x build-ubuntu-appimages.sh
        ./build-ubuntu-appimages.sh -a

    - name: Make AppImages
      run: |
        cd ton
        cp assembly/appimage/create-appimages.sh .
        cp assembly/appimage/AppRun .
        cp assembly/appimage/ton.png .
        chmod +x create-appimages.sh
        ./create-appimages.sh
        rm -rf artifacts

    - name: Build TON libs
      run: |
        cd ton
        cp assembly/native/build-ubuntu-portable-libs.sh .
        chmod +x build-ubuntu-portable-libs.sh
        ./build-ubuntu-portable-libs.sh -a
        cp ./artifacts/libtonlibjson.so appimages/artifacts/
        cp ./artifacts/libemulator.so appimages/artifacts/

    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: ton-22.04-arm64-${{ inputs.branch }}
        path: ton/appimages/artifacts
